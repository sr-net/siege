/* eslint-disable */
import { Context } from "@/app"

/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {}

export interface NexusGenEnums {
  AuthorType: "NAME" | "REDDIT" | "TWITCH" | "YOUTUBE"
  Gamemode: "BOMBS" | "CAPTURE_AREAS" | "HOSTAGE"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: Date
}

export interface NexusGenObjects {
  Author: {
    // root type
    name: string // String!
    type: NexusGenEnums["AuthorType"] // AuthorType!
    url?: string | null // String
  }
  Mutation: {}
  Query: {}
  Strat: {
    // root type
    acceptedAt?: NexusGenScalars["DateTime"] | null // DateTime
    atk: boolean // Boolean!
    author: NexusGenRootTypes["Author"] // Author!
    def: boolean // Boolean!
    description: string // String!
    gamemodes: NexusGenEnums["Gamemode"][] // [Gamemode!]!
    liked: boolean // Boolean!
    score: number // Int!
    shortId: number // Int!
    submission: boolean // Boolean!
    title: string // String!
    uuid: string // ID!
  }
  StratPage: {
    // root type
    items: NexusGenRootTypes["Strat"][] // [Strat!]!
    lastPage: number // Int!
  }
}

export interface NexusGenInterfaces {}

export interface NexusGenUnions {}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Author: {
    // field return type
    name: string // String!
    type: NexusGenEnums["AuthorType"] // AuthorType!
    url: string | null // String
  }
  Mutation: {
    // field return type
    likeStrat: NexusGenRootTypes["Strat"] | null // Strat
    unlikeStrat: NexusGenRootTypes["Strat"] | null // Strat
  }
  Query: {
    // field return type
    strat: NexusGenRootTypes["Strat"] | null // Strat
    strats: NexusGenRootTypes["StratPage"] // StratPage!
  }
  Strat: {
    // field return type
    acceptedAt: NexusGenScalars["DateTime"] | null // DateTime
    atk: boolean // Boolean!
    author: NexusGenRootTypes["Author"] // Author!
    def: boolean // Boolean!
    description: string // String!
    gamemodes: NexusGenEnums["Gamemode"][] // [Gamemode!]!
    liked: boolean // Boolean!
    score: number // Int!
    shortId: number // Int!
    submission: boolean // Boolean!
    title: string // String!
    uuid: string // ID!
  }
  StratPage: {
    // field return type
    items: NexusGenRootTypes["Strat"][] // [Strat!]!
    lastPage: number // Int!
  }
}

export interface NexusGenFieldTypeNames {
  Author: {
    // field return type name
    name: "String"
    type: "AuthorType"
    url: "String"
  }
  Mutation: {
    // field return type name
    likeStrat: "Strat"
    unlikeStrat: "Strat"
  }
  Query: {
    // field return type name
    strat: "Strat"
    strats: "StratPage"
  }
  Strat: {
    // field return type name
    acceptedAt: "DateTime"
    atk: "Boolean"
    author: "Author"
    def: "Boolean"
    description: "String"
    gamemodes: "Gamemode"
    liked: "Boolean"
    score: "Int"
    shortId: "Int"
    submission: "Boolean"
    title: "String"
    uuid: "ID"
  }
  StratPage: {
    // field return type name
    items: "Strat"
    lastPage: "Int"
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    likeStrat: {
      // args
      uuid: string // ID!
    }
    unlikeStrat: {
      // args
      uuid: string // ID!
    }
  }
  Query: {
    strat: {
      // args
      atk?: boolean | null // Boolean
      def?: boolean | null // Boolean
      excludeShortIds?: number[] | null // [Int!]
      gamemode?: NexusGenEnums["Gamemode"] | null // Gamemode
      random?: boolean | null // Boolean
      shortId?: number | null // Int
      uuid?: string | null // ID
    }
    strats: {
      // args
      atk?: boolean | null // Boolean
      def?: boolean | null // Boolean
      excludeShortIds?: number[] | null // [Int!]
      gamemode?: NexusGenEnums["Gamemode"] | null // Gamemode
      page: number | null // Int
      shortId?: number | null // Int
      uuid?: string | null // ID
    }
  }
}

export interface NexusGenAbstractTypeMembers {}

export interface NexusGenTypeInterfaces {}

export type NexusGenObjectNames = keyof NexusGenObjects

export type NexusGenInputNames = never

export type NexusGenEnumNames = keyof NexusGenEnums

export type NexusGenInterfaceNames = never

export type NexusGenScalarNames = keyof NexusGenScalars

export type NexusGenUnionNames = never

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never

export type NexusGenAbstractsUsingStrategyResolveType = never

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context
  inputTypes: NexusGenInputs
  rootTypes: NexusGenRootTypes
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars
  argTypes: NexusGenArgTypes
  fieldTypes: NexusGenFieldTypes
  fieldTypeNames: NexusGenFieldTypeNames
  allTypes: NexusGenAllTypes
  typeInterfaces: NexusGenTypeInterfaces
  objectNames: NexusGenObjectNames
  inputNames: NexusGenInputNames
  enumNames: NexusGenEnumNames
  interfaceNames: NexusGenInterfaceNames
  scalarNames: NexusGenScalarNames
  unionNames: NexusGenUnionNames
  allInputTypes:
    | NexusGenTypes["inputNames"]
    | NexusGenTypes["enumNames"]
    | NexusGenTypes["scalarNames"]
  allOutputTypes:
    | NexusGenTypes["objectNames"]
    | NexusGenTypes["enumNames"]
    | NexusGenTypes["unionNames"]
    | NexusGenTypes["interfaceNames"]
    | NexusGenTypes["scalarNames"]
  allNamedTypes: NexusGenTypes["allInputTypes"] | NexusGenTypes["allOutputTypes"]
  abstractTypes: NexusGenTypes["interfaceNames"] | NexusGenTypes["unionNames"]
  abstractTypeMembers: NexusGenAbstractTypeMembers
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType
  features: NexusGenFeaturesConfig
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<
    TypeName extends string,
    FieldName extends string,
  > {}
  interface NexusGenPluginInputFieldConfig<
    TypeName extends string,
    FieldName extends string,
  > {}
  interface NexusGenPluginSchemaConfig {}
  interface NexusGenPluginArgConfig {}
}
