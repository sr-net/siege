# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Author {
  type: AuthorType!
  name: String!
  url: String
}

enum AuthorType {
  Name
  YouTube
  Twitch
  Reddit
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

enum Gamemode {
  Bombs
  Hostage
  Areas
}

type Mutation {
  likeStrat(uuid: ID!): Strat
  unlikeStrat(uuid: ID!): Strat
}

type Query {
  strat(
    uuid: ID
    shortId: Int

    """
    Set to `true` to filter for Strats that work on attack. Setting to `false` does nothing.
    """
    atk: Boolean

    """
    Set to `true` to filter for Strats that work on defense. Setting to `false` does nothing.
    """
    def: Boolean

    """A list of Strats to be excluded from the result."""
    excludeShortIds: [ID!]
  ): Strat
  strats(
    uuid: ID
    shortId: Int

    """
    Set to `true` to filter for Strats that work on attack. Setting to `false` does nothing.
    """
    atk: Boolean

    """
    Set to `true` to filter for Strats that work on defense. Setting to `false` does nothing.
    """
    def: Boolean

    """A list of Strats to be excluded from the result."""
    excludeShortIds: [ID!]
    page: Int = 1
  ): StratPage!
  submission: Strat
}

type Strat {
  uuid: ID!
  shortId: Int!
  title: String!
  description: String!
  author: Author!
  atk: Boolean!
  def: Boolean!
  gamemodes: [Gamemode!]!
  score: Int!
  submission: Boolean!
  acceptedAt: DateTime
  liked: Boolean!
}

type StratPage {
  items: [Strat!]!
  lastPage: Int!
}
